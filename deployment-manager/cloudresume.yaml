resources:
# Website bucket
- name: coffeetime-dev-cloudresume
  type: gcp-types/storage-v1:buckets
  properties:
    storageClass: REGIONAL
    location: us-east1
    website:
      mainPageSuffix: index.html
      notFoundPage: index.html
    iamConfiguration:
      uniformBucketLevelAccess:
        enabled: true
    labels:
      app: cloudresume

# Allow everyone to read the bucket
- name: cloudresume-public-read
  type: gcp-types/storage-v1:virtual.buckets.iamMemberBinding
  properties:
    bucket: $(ref.coffeetime-dev-cloudresume.name)
    role: roles/storage.objectViewer
    member: allUsers

# Add the DNS zone
- name: hey-printz-dev
  type: gcp-types/dns-v1:managedZones
  properties:
    description: hey.printz.dev DNS zone
    dnsName: hey.printz.dev.
    labels:
      app: cloudresume

# Create a public IP address
- name: cloudresume-public-ip
  type: gcp-types/compute-v1:globalAddresses
  properties:
    labels:
      app: cloudresume

# Associate the public IP to the DNS name
- name: hey-printz-dev-a-entry
  type: gcp-types/dns-v1:resourceRecordSets
  properties:
    name: $(ref.hey-printz-dev.dnsName)
    managedZone: $(ref.hey-printz-dev.name)
    records:
    - type: A
      ttl: 300
      rrdatas:
      - $(ref.cloudresume-public-ip.address)

# Put the bucket as a backend service
- name: cloudresume-backend-bucket
  type: gcp-types/compute-v1:backendBuckets
  properties:
    bucketName: $(ref.coffeetime-dev-cloudresume.name)
    description: Backend bucket for the CDN
    enableCdn: true

# Create an HTTPS certificate
- name: cloudresume-https-cert
  type: gcp-types/compute-v1:sslCertificates
  properties:
    type: MANAGED
    managed:
      domains:
        - $(ref.hey-printz-dev.dnsName)

# Create the loadbalancer (URL MAP)
- name: cloudresume-url-map
  type: gcp-types/compute-v1:urlMaps
  properties:
    defaultService: $(ref.cloudresume-backend-bucket.selfLink)
    labels:
      app: cloudresume

# Add the HTTPS certificate
- name: cloudresume-target-proxy
  type: gcp-types/compute-v1:targetHttpsProxies
  properties:
    urlMap: $(ref.cloudresume-url-map.selfLink)
    sslCertificates:
    - $(ref.cloudresume-https-cert.selfLink)

# Add the forwarding rule (listener)
- name: cloudresume-forwarding-rule
  type: gcp-types/compute-v1:globalForwardingRules
  properties:
    loadBalancingScheme: EXTERNAL
    IPAddress: $(ref.cloudresume-public-ip.address)
    IPProtocol: TCP
    portRange: 443
    target: $(ref.cloudresume-target-proxy.selfLink)
    labels:
      app: cloudresume

# Bucket to host the cloud function
- name: coffeetime-dev-cloudresume-functions
  type: gcp-types/storage-v1:buckets
  properties:
    storageClass: REGIONAL
    location: us-east1
    iamConfiguration:
      uniformBucketLevelAccess:
        enabled: true
    labels:
      app: cloudresume

# Deploy the cloudfunction
- name: cloudresume-visitor-count
  type: gcp-types/cloudfunctions-v1:projects.locations.functions
  properties:
    function: cloudresume-visitor-count
    parent: projects/coffeetime-dev-282015/locations/us-east1
    entryPoint: visitor_count
    runtime: python37
    sourceArchiveUrl: gs://$(ref.coffeetime-dev-cloudresume-functions.name)/visitor_count.zip
    maxInstances: 10
    availableMemoryMb: 128
    timeout: 3s
    httpsTrigger: {}

# Allow everyone to execute the function
- name: cloudresume-public-execution
  type: gcp-types/cloudfunctions-v1:virtual.projects.locations.functions.iamMemberBinding
  properties:
    resource: $(ref.cloudresume-visitor-count.name)
    member: allUsers
    role: roles/cloudfunctions.invoker